/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.yuandw.study.controller;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import com.yuandw.study.controller.PayDateController;
import com.yuandw.study.service.PayDateService;
import com.yuandw.study.utils.ResponseData;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class PayDateController_SSTest extends PayDateController_SSTest_scaffolding {
// allCoveredLines:[20, 33, 34, 35]

  @Test(timeout = 4000)
  public void test_payInfo_0()  throws Throwable  {
      //caseID:b383c7cd5794aa126e0ef02a3fe452e3
      //CoveredLines: [20, 33, 34, 35]
      //Assert: assertEquals("success", method_result.getMsg());
      //Assert: assertEquals("10000", method_result.getCode());
      
      PayDateController payDateController0 = new PayDateController();
      //mock payDateService0
      PayDateService payDateService0 = mock(PayDateService.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      PrivateAccess.setVariable((Class<?>) PayDateController.class, payDateController0, "payDateService", (Object) payDateService0);
      
      //Call method: payInfo
      ResponseData<String> responseData0 = payDateController0.payInfo();
      
      //Test Result Assert
      assertEquals("success", responseData0.getMsg());
      
      //Test Result Assert
      assertEquals("10000", responseData0.getCode());
  }
}
